package admin.frames;

import admin.ConfigWindow;
import admin.MDIStart;
import admin.Preferences;
import java.awt.Dimension;
import java.awt.Point;

public class ItemExtendedFrame extends javax.swing.JInternalFrame {

    
    /**
     * Creates new form ItemExtendedFrame
     */
    public ItemExtendedFrame() {
        initComponents();
        if (!java.beans.Beans.isDesignTime()) {
            loadAndSetPositionAndSizeOfWindow();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemExtended = new admin.frames.ItemExtended();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemSluit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemNieuw = new javax.swing.JMenuItem();
        jMenuItemBewerken = new javax.swing.JMenuItem();
        jMenuItemVerwijderen = new javax.swing.JMenuItem();
        jMenuDiversen = new javax.swing.JMenu();
        jMenuItemSaveKolommen = new javax.swing.JMenuItem();
        jMenuItemReadDirectory = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Administratie Bestanden");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jMenuFile.setText("File");

        jMenuItemSluit.setText("Sluit scherm");
        jMenuItemSluit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSluitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSluit);

        jMenuBar1.add(jMenuFile);

        jMenuEdit.setText("Edit");

        jMenuItemNieuw.setText("Nieuw bestand");
        jMenuEdit.add(jMenuItemNieuw);

        jMenuItemBewerken.setText("Bewerken");
        jMenuEdit.add(jMenuItemBewerken);

        jMenuItemVerwijderen.setText("Verwijderen");
        jMenuEdit.add(jMenuItemVerwijderen);

        jMenuBar1.add(jMenuEdit);

        jMenuDiversen.setText("Diversen");

        jMenuItemSaveKolommen.setText("Save Kolommen");
        jMenuDiversen.add(jMenuItemSaveKolommen);

        jMenuItemReadDirectory.setText("Lees Komplete Directory Bestanden");
        jMenuItemReadDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReadDirectoryActionPerformed(evt);
            }
        });
        jMenuDiversen.add(jMenuItemReadDirectory);

        jMenuBar1.add(jMenuDiversen);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemExtended, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemExtended, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        savePositionAndSizeOfWindow();
    }//GEN-LAST:event_formInternalFrameClosing

    private void jMenuItemSluitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSluitActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItemSluitActionPerformed

    private void jMenuItemReadDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReadDirectoryActionPerformed
        itemExtended.importFilesFromDirectory();
    }//GEN-LAST:event_jMenuItemReadDirectoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private admin.frames.ItemExtended itemExtended;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuDiversen;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemBewerken;
    private javax.swing.JMenuItem jMenuItemNieuw;
    private javax.swing.JMenuItem jMenuItemReadDirectory;
    private javax.swing.JMenuItem jMenuItemSaveKolommen;
    private javax.swing.JMenuItem jMenuItemSluit;
    private javax.swing.JMenuItem jMenuItemVerwijderen;
    // End of variables declaration//GEN-END:variables

    private void savePositionAndSizeOfWindow() {
        try {
            // Get window name
            String className = this.getClass().getName();
            Dimension size = this.getSize();
            Point point = this.getLocation();
            ConfigWindow confWin = new ConfigWindow();
            confWin.setDimension(size);
            confWin.setPoint(point);
            confWin.setWindowName(className);
            Preferences.saveProperties(confWin);
        } catch (Exception ex) {
            System.out.println("Something terrible happened with saving "
                    + "the window size and position. "
                    + "(loadAndSetPositionAndSizeOfWindow) of "
                    + this.getClass().getName() + ex);
        }

    }

    private void loadAndSetPositionAndSizeOfWindow() {
        
        ConfigWindow confWin = Preferences.loadProperties(this.getClass().getName());
        if (confWin == null){
            System.out.println("Geen confWin gevonden voor " + this.getClass().getName());
        }

        try {
            if (confWin.getDimension() != null && confWin.getDimension().getWidth() > 0 && confWin.getDimension().getHeight() > 0) {
                this.setSize(confWin.getDimension());
            }

            if (confWin.getPoint() != null && confWin.getPoint().getX() > 0 && confWin.getPoint().getY() > 0) {
                this.setLocation(confWin.getPoint());
            }
        } catch (Exception ex) {
            System.out.println("Something terrible happened with loading "
                    + "and/or setting the window size and position. "
                    + "(loadAndSetPositionAndSizeOfWindow) of "
                    + this.getClass().getName() + ex);

        }

    }

    public void setMDIHandle (MDIStart mdiStart){
        itemExtended.setMDIStart(mdiStart);
    }
    
    
    
}
